;;
;; Header files for NftItem
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_load_address_opt
(slice, slice) __tact_load_address_opt(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_store_address_opt
builder __tact_store_address_opt(builder b, slice address) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_dict_get_int_cell
cell __tact_dict_get_int_cell(cell d, int kl, int k) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; __tact_string_builder_start
tuple __tact_string_builder_start(builder b) inline;

;; __tact_string_builder_start_string
tuple __tact_string_builder_start_string() inline;

;; __tact_string_builder_end
cell __tact_string_builder_end(tuple builders) inline;

;; __tact_string_builder_append
((tuple), ()) __tact_string_builder_append(tuple builders, slice sc) inline_ref;

;; __tact_int_to_string
slice __tact_int_to_string(int src) inline_ref;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $Transfer$_store
builder $Transfer$_store(builder build_0, (int, slice, slice, cell, int, slice) v) inline_ref;

;; $Transfer$_store_cell
cell $Transfer$_store_cell((int, slice, slice, cell, int, slice) v) inline;

;; $Transfer$_load
(slice, ((int, slice, slice, cell, int, slice))) $Transfer$_load(slice sc_0) inline_ref;

;; $OwnershipAssigned$_store
builder $OwnershipAssigned$_store(builder build_0, (int, slice, slice) v) inline;

;; $OwnershipAssigned$_store_cell
cell $OwnershipAssigned$_store_cell((int, slice, slice) v) inline;

;; $Excesses$_store
builder $Excesses$_store(builder build_0, (int) v) inline;

;; $Excesses$_store_cell
cell $Excesses$_store_cell((int) v) inline;

;; $GetStaticData$_load
(slice, ((int))) $GetStaticData$_load(slice sc_0) inline;

;; $ReportStaticData$_store
builder $ReportStaticData$_store(builder build_0, (int, int, slice) v) inline;

;; $ReportStaticData$_store_cell
cell $ReportStaticData$_store_cell((int, int, slice) v) inline;

;; $GetNftData$_load
(slice, ((int, int, slice, slice, cell, int, int))) $GetNftData$_load(slice sc_0) inline_ref;

;; $GetNftData$_as_optional
tuple $GetNftData$_as_optional((int, int, slice, slice, cell, int, int) v) inline;

;; $GetNftData$_load_opt
tuple $GetNftData$_load_opt(cell cl) inline;

;; $Bought$_store
builder $Bought$_store(builder build_0, (int, slice, int, slice) v) inline;

;; $Bought$_store_cell
cell $Bought$_store_cell((int, slice, int, slice) v) inline;

;; $Buy$_load
(slice, ((int, int))) $Buy$_load(slice sc_0) inline;

;; $ListOnSale$_load
(slice, ((int, int, slice, int))) $ListOnSale$_load(slice sc_0) inline;

;; $NftItem$_store
builder $NftItem$_store(builder build_0, (slice, int, int, slice, cell, int, int, cell) v) inline;

;; $NftItem$_load
(slice, ((slice, int, int, slice, cell, int, int, cell))) $NftItem$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $GetNftData$_not_null
((int, int, slice, slice, cell, int, int)) $GetNftData$_not_null(tuple v) inline;

;; $GetNftData$_to_external
(int, int, slice, slice, cell, int, int) $GetNftData$_to_external(((int, int, slice, slice, cell, int, int)) v) inline;

;; $NftItem$init$_load
(slice, ((slice, int, int))) $NftItem$init$_load(slice sc_0) inline;

;; $NftItem$_contract_init
(slice, int, int, slice, cell, int, int, cell) $NftItem$_contract_init(slice $collection_address, int $item_index, int $price) impure inline_ref;

;; $NftItem$_contract_load
(slice, int, int, slice, cell, int, int, cell) $NftItem$_contract_load() impure inline_ref;

;; $NftItem$_contract_store
() $NftItem$_contract_store((slice, int, int, slice, cell, int, int, cell) v) impure inline;

;; $global_emptyCell
cell $global_emptyCell() impure inline;

;; $Cell$_fun_asSlice
slice $Cell$_fun_asSlice(cell $self) impure inline;

;; $global_emptySlice
slice $global_emptySlice() impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $global_emit
() $global_emit(cell $body) impure inline;

;; $Context$_fun_readForwardFee
int $Context$_fun_readForwardFee((int, slice, int, slice) $self) impure inline_ref;

;; $NftItem$_fun_msgValue
((slice, int, int, slice, cell, int, int, cell), int) $NftItem$_fun_msgValue((slice, int, int, slice, cell, int, int, cell) $self, int $value) impure inline_ref;

;; $GetNftData$_constructor_is_initialized_index_collection_address_owner_address_individual_content_price_onSale
((int, int, slice, slice, cell, int, int)) $GetNftData$_constructor_is_initialized_index_collection_address_owner_address_individual_content_price_onSale(int is_initialized, int index, slice collection_address, slice owner_address, cell individual_content, int price, int onSale) inline;

;; $NftItem$_fun_get_nft_data
((slice, int, int, slice, cell, int, int, cell), (int, int, slice, slice, cell, int, int)) $NftItem$_fun_get_nft_data((slice, int, int, slice, cell, int, int, cell) $self) impure inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline;

;; $NftItem$_fun_forward
((slice, int, int, slice, cell, int, int, cell), ()) $NftItem$_fun_forward((slice, int, int, slice, cell, int, int, cell) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $NftItem$_fun_notify
((slice, int, int, slice, cell, int, int, cell), ()) $NftItem$_fun_notify((slice, int, int, slice, cell, int, int, cell) $self, cell $body) impure inline;

;; $SendParameters$_constructor_to_value_bounce_mode_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_bounce_mode_body(slice to, int value, int bounce, int mode, cell body) inline;

;; $Transfer$_constructor_query_id_new_owner_response_destination_custom_payload_forward_amount_forward_payload
((int, slice, slice, cell, int, slice)) $Transfer$_constructor_query_id_new_owner_response_destination_custom_payload_forward_amount_forward_payload(int query_id, slice new_owner, slice response_destination, cell custom_payload, int forward_amount, slice forward_payload) inline;

;; $Bought$_constructor_index_nftAddress_price_buyer
((int, slice, int, slice)) $Bought$_constructor_index_nftAddress_price_buyer(int index, slice nftAddress, int price, slice buyer) inline;

;; $SendParameters$_constructor_to_value_mode_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_body(slice to, int value, int mode, cell body) inline;

;; $Excesses$_constructor_query_id
((int)) $Excesses$_constructor_query_id(int query_id) inline;

;; $SendParameters$_constructor_to_value_mode_bounce_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_bounce_body(slice to, int value, int mode, int bounce, cell body) inline;

;; $OwnershipAssigned$_constructor_query_id_prev_owner_forward_payload
((int, slice, slice)) $OwnershipAssigned$_constructor_query_id_prev_owner_forward_payload(int query_id, slice prev_owner, slice forward_payload) inline;

;; $ReportStaticData$_constructor_query_id_index_id_collection
((int, int, slice)) $ReportStaticData$_constructor_query_id_index_id_collection(int query_id, int index_id, slice collection) inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int queryId) inline;
