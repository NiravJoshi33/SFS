;;
;; Header files for nftCollection
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_create_address
slice __tact_create_address(int chain, int hash) inline;

;; __tact_compute_contract_address
slice __tact_compute_contract_address(int chain, cell code, cell data) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_dict_set_int_slice
(cell, ()) __tact_dict_set_int_slice(cell d, int kl, int k, slice v) inline;

;; __tact_dict_get_int_slice
slice __tact_dict_get_int_slice(cell d, int kl, int k) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; __tact_dict_set_code
cell __tact_dict_set_code(cell dict, int id, cell code) inline;

;; __tact_dict_get_code
cell __tact_dict_get_code(cell dict, int id) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $Transfer$_store
builder $Transfer$_store(builder build_0, (int, slice) v) inline;

;; $Transfer$_store_cell
cell $Transfer$_store_cell((int, slice) v) inline;

;; $Mint$_load
(slice, ((int, int))) $Mint$_load(slice sc_0) inline;

;; $nftCollection$_store
builder $nftCollection$_store(builder build_0, (slice, int, cell, cell) v) inline;

;; $nftCollection$_load
(slice, ((slice, int, cell, cell))) $nftCollection$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $StateInit$_to_external
(cell, cell) $StateInit$_to_external(((cell, cell)) v) inline;

;; $Context$_get_value
_ $Context$_get_value((int, slice, int, slice) v) inline;

;; $CollectionData$_to_external
(int, cell, slice) $CollectionData$_to_external(((int, cell, slice)) v) inline;

;; $NftItem$init$_store
builder $NftItem$init$_store(builder build_0, (slice, slice, int, int) v) inline;

;; $nftCollection$init$_load
(slice, ((cell))) $nftCollection$init$_load(slice sc_0) inline;

;; $nftCollection$_contract_init
(slice, int, cell, cell) $nftCollection$_contract_init(cell $collection_content) impure inline_ref;

;; $nftCollection$_contract_load
(slice, int, cell, cell) $nftCollection$_contract_load() impure inline_ref;

;; $nftCollection$_contract_store
() $nftCollection$_contract_store((slice, int, cell, cell) v) impure inline;

;; $global_contractAddress
slice $global_contractAddress((cell, cell) $s) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $NftItem$_init_child
(cell, cell) $NftItem$_init_child(cell sys', slice $owner, slice $collection_address, int $item_index, int $price) inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline;

;; $SendParameters$_constructor_to_value_mode_bounce_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_bounce_body_code_data(slice to, int value, int mode, int bounce, cell body, cell code, cell data) inline;

;; $Transfer$_constructor_query_id_new_owner
((int, slice)) $Transfer$_constructor_query_id_new_owner(int query_id, slice new_owner) inline;

;; $nftCollection$_fun_getNftItemInit
((slice, int, cell, cell), (cell, cell)) $nftCollection$_fun_getNftItemInit((slice, int, cell, cell) $self, int $item_index, int $price) impure inline_ref;

;; $nftCollection$_fun_mint
((slice, int, cell, cell), ()) $nftCollection$_fun_mint((slice, int, cell, cell) $self, slice $receiver, int $price) impure inline_ref;

;; $nftCollection$_fun_getItemAddress
((slice, int, cell, cell), slice) $nftCollection$_fun_getItemAddress((slice, int, cell, cell) $self, int $item_index) impure inline_ref;

;; $CollectionData$_constructor_next_item_index_collection_content_owner_address
((int, cell, slice)) $CollectionData$_constructor_next_item_index_collection_content_owner_address(int next_item_index, cell collection_content, slice owner_address) inline;

;; $nftCollection$_fun_gteCollectionData
((slice, int, cell, cell), (int, cell, slice)) $nftCollection$_fun_gteCollectionData((slice, int, cell, cell) $self) impure inline_ref;

;; $nftCollection$_fun_currentIndex
((slice, int, cell, cell), int) $nftCollection$_fun_currentIndex((slice, int, cell, cell) $self) impure inline_ref;

;; $nftCollection$_fun_forward
((slice, int, cell, cell), ()) $nftCollection$_fun_forward((slice, int, cell, cell) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $nftCollection$_fun_notify
((slice, int, cell, cell), ()) $nftCollection$_fun_notify((slice, int, cell, cell) $self, cell $body) impure inline;

;; $nftCollection$_fun_requireOwner
((slice, int, cell, cell), ()) $nftCollection$_fun_requireOwner((slice, int, cell, cell) $self) impure inline_ref;

;; $nftCollection$_fun_owner
((slice, int, cell, cell), slice) $nftCollection$_fun_owner((slice, int, cell, cell) $self) impure inline_ref;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int queryId) inline;
